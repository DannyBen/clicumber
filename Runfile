require 'fileutils'

name    "Clicumber Utilities"
summary "Development utilities for clicumber"
version "0.1.0"

usage  "test [current]"
help   "Run cucumber feature tests"
action :test do |args|
  cmd = "cucumber"
  cmd = "#{cmd} --tags @current" if args['current']
  exec cmd
end

usage  "scaffold [--force]"
help   "Generate a folder with a complete cucumber setup"
option "-f --force", "Force generation even if folder exists"
action :scaffold do |args|
  target = 'scaffold'
  if Dir.exist? target and !args['--force']
    abort "Folder '#{target}' already exists, aborting to avoid data loss.\nUse --force to generate anyway." 
  end
  Dir.mkdir target unless Dir.exist? target
  entries = %w[config features]
  entries.each do |entry|
    FileUtils.copy_entry entry, "#{target}/#{entry}"
  end

  gemfile_content = %Q[source "https://rubygems.org"\n\ngem "cucumber"\ngem 'rspec-expectations\ngem 'byebug']
  File.write "#{target}/Gemfile", gemfile_content
end

help   "Generate step definitions markdown document"
action :stepdef do
  regex = /^(Given|When|Then)\((\/.*\/)\) do.*$/
  files = Dir['features/step_definitions/*.rb']
  doc = []
  doc << "# Clicumber Step Definitions Summary\n"
  files.each do |file|
    # doc << "## #{File.basename(file, '.rb')}\n"
    File.readlines(file).each do |line|
      if matches = regex.match(line)
        clause = matches.captures[0]
        definition = matches.captures[1] # .gsub /(".*?")/, '`__\1__`'
        doc << "- __`#{clause}`__ `#{definition}`"
      end
    end
  end
  doc = doc.join "\n"
  filename = 'doc/Step Definitions.md'
  File.write filename, doc
  say "Generated !txtpur!#{filename}"  
end

